git init -> inicia el repositorio
git add nombredelarchivo.txt -> lo agrega al repositorio solo ese archivo
git comit -m "version 1" -> manda los ultimos cambios del archivo a la base de datos
git add . -> agregar todos los archivos
git status -> En que estado esta el archivo? , si ta se agrego y si ya se le hizo commit
git show -> todos los cambios historicos
git log nombrdearchivo.txt -> hitoria entera del archivo
git push -> enviar a repositorio
git log-> historia del archivo


Comandos en la terminal.

pwd -> Ver ruta en la que estoy parado
mkdir proyecto1 -> crear una carpeta
ls -> mostrar contenido de una carpeta
cd proyecto1/ -> cd cambiar direccion de carpeta
touch vacio.txt -> crar un documento dentro de una carpeta
cat vacio.txt -> leer contenido de un archivo
history -> historial de comandos usados
ls -> mostrar archivos de una carpeta
ls -al -> mostrar todos los archivos incluso los ocultos

//------------------
crear repositorio decir donde esta la carpeta central de mis archivos .git


git config --list -> ver configuracion de tu git

git config -> ver configuracion del git

git show -> te muestra los cambios que han existido y en donde en un archivo

git commit - > vacio que pasa? te manda un mensaje de error y lo tienes que agregar
para salir esc + shift + z + z

git diff -> ver los cambios

Hoy es jueves

git diff # commit espacio #  del otro commit a comparar  -> diferencias entre un cambio de un archivo y otro usando el numero junto al commit de cada archivo
git log --stat -> ver los cambios en los archivos
git checkout +numerodelcommit + nombredelarchivo ver los cambios de una version anterior
git master nombre del archivo

master en donde estoy v1 v2 ... v3 commit .. actual

rama experimental en v3 para un experimento 

merge unir una version con otra

hoy hablaremos de su vida y obra maestra

manterner ese cambio ->
